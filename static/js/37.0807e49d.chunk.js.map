{"version":3,"sources":["../node_modules/react-use/esm/useClickAway.js","components/StateHeader.js"],"names":["defaultEvents","useClickAway","ref","onClickAway","events","savedCallback","useRef","useEffect","current","handler","event","el","contains","target","_i","events_1","length","eventName","on","document","events_2","off","StateHeader","data","t","stateCode","useTranslation","trail","useMemo","styles","map","element","index","push","animationDelay","spring","useSpring","total","getStatistic","config","SPRING_CONFIG_NUMBERS","className","meta","style","formatDate","last_updated","h2","to","formatNumber","memo"],"mappings":"+GAAA,oBAEIA,EAAgB,CAAC,YAAa,cAwBnBC,IAvBI,SAAUC,EAAKC,EAAaC,QAC5B,IAAXA,IAAqBA,EAASJ,GAClC,IAAIK,EAAgBC,iBAAOH,GAC3BI,qBAAU,WACNF,EAAcG,QAAUL,IACzB,CAACA,IACJI,qBAAU,WAKN,IAJA,IAAIE,EAAU,SAAUC,GACpB,IAAIC,EAAKT,EAAIM,QACbG,IAAOA,EAAGC,SAASF,EAAMG,SAAWR,EAAcG,QAAQE,IAErDI,EAAK,EAAGC,EAAWX,EAAQU,EAAKC,EAASC,OAAQF,IAAM,CAC5D,IAAIG,EAAYF,EAASD,GACzBI,YAAGC,SAAUF,EAAWR,GAE5B,OAAO,WACH,IAAK,IAAIK,EAAK,EAAGM,EAAWhB,EAAQU,EAAKM,EAASJ,OAAQF,IAAM,CAC5D,IAAIG,EAAYG,EAASN,GACzBO,YAAIF,SAAUF,EAAWR,OAGlC,CAACL,EAAQF,M,mHCfhB,SAASoB,EAAT,GAAyC,IAAD,EAAlBC,EAAkB,EAAlBA,KACbC,GAD+B,EAAZC,UACdC,cAALF,GAEDG,EAAQC,mBAAQ,WACpB,IAAMC,EAAS,GASf,MAPA,CAAC,EAAG,EAAG,GAAGC,KAAI,SAACC,EAASC,GAItB,OAHAH,EAAOI,KAAK,CACVC,eAAe,GAAD,OAAa,IAARF,EAAL,QAET,QAGFH,IACN,IAEGM,EAASC,oBAAU,CACvBC,MAAOC,YAAaf,EAAM,QAAS,UACnCgB,OAAQC,MAGV,OACE,sBAAKC,UAAU,cAAf,UACE,qBAAKA,UAAU,cAAf,UAEO,OAAJlB,QAAI,IAAJA,GAAA,UAAAA,EAAMmB,YAAN,8BACC,oBAAID,UAAU,WAAWE,MAAOhB,EAAM,GAAtC,mBACMH,EAAE,mBADR,YAC8BoB,YAC1BrB,EAAKmB,KAAKG,aACV,aAHJ,YAIOrB,EAAE,YAKb,sBAAKiB,UAAU,wBAAwBE,MAAOhB,EAAM,GAApD,UACE,6BAAKH,EAAE,YACP,cAAC,WAASsB,GAAV,UACGX,EAAOE,MAAMU,IAAG,SAACV,GAAD,OAAWW,YAAaX,EAAO,mBAQ3CY,yBAAK3B","file":"static/js/37.0807e49d.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\nimport { off, on } from './misc/util';\nvar defaultEvents = ['mousedown', 'touchstart'];\nvar useClickAway = function (ref, onClickAway, events) {\n    if (events === void 0) { events = defaultEvents; }\n    var savedCallback = useRef(onClickAway);\n    useEffect(function () {\n        savedCallback.current = onClickAway;\n    }, [onClickAway]);\n    useEffect(function () {\n        var handler = function (event) {\n            var el = ref.current;\n            el && !el.contains(event.target) && savedCallback.current(event);\n        };\n        for (var _i = 0, events_1 = events; _i < events_1.length; _i++) {\n            var eventName = events_1[_i];\n            on(document, eventName, handler);\n        }\n        return function () {\n            for (var _i = 0, events_2 = events; _i < events_2.length; _i++) {\n                var eventName = events_2[_i];\n                off(document, eventName, handler);\n            }\n        };\n    }, [events, ref]);\n};\nexport default useClickAway;\n","import StateDropdown from './StateDropdown';\n\nimport {SPRING_CONFIG_NUMBERS} from '../constants.js';\nimport {formatDate, formatNumber, getStatistic} from '../utils/commonFunctions';\n\nimport {memo, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {animated, useSpring} from 'react-spring';\n\nfunction StateHeader({data, stateCode}) {\n  const {t} = useTranslation();\n\n  const trail = useMemo(() => {\n    const styles = [];\n\n    [0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${index * 250}ms`,\n      });\n      return null;\n    });\n\n    return styles;\n  }, []);\n\n  const spring = useSpring({\n    total: getStatistic(data, 'total', 'tested'),\n    config: SPRING_CONFIG_NUMBERS,\n  });\n\n  return (\n    <div className=\"StateHeader\">\n      <div className=\"header-left\">\n        \n        {data?.meta?.['last_updated'] && (\n          <h5 className=\"fadeInUp\" style={trail[1]}>\n            {`${t('Last Updated on')} ${formatDate(\n              data.meta.last_updated,\n              'dd MMM, p'\n            )} ${t('IST')}`}\n          </h5>\n        )}\n      </div>\n\n      <div className=\"header-right fadeInUp\" style={trail[2]}>\n        <h5>{t('Tested')}</h5>\n        <animated.h2>\n          {spring.total.to((total) => formatNumber(total, 'long'))}\n        </animated.h2>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default memo(StateHeader);\n"],"sourceRoot":""}